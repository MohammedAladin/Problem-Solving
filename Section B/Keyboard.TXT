using namespace std;
#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <map>
#include <algorithm>
#include <cmath>
 
void quick_io()
{
	std::ios::sync_with_stdio(0);
	cin.tie(NULL);
	cout.tie(NULL);
}
 
int main() {
	quick_io();
	int n , m , x ;
	cin >> n >> m >> x;
	vector <pair<int, int>> shifts;
	map <char, vector<pair<int, int>>> chars;
	char c;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			cin >> c;
			if (c == 'S')
				shifts.push_back({ i,j });
			else
				chars[c].push_back({ i,j });
		}
	}
	bool scan[26];
	for (int i = 0; i < 26; i++) {
		bool can = false;
		for (int j = 0; j < shifts.size(); j++) {
			for (int k = 0; k < chars[i+'a'].size(); k++) {
				double dis = pow(chars[i + 'a'][k].first - shifts[j].first, 2) + pow(chars[i + 'a'][k].second - shifts[j].second, 2);
				if (dis <= x * x) {
					scan[i] = true;
					can = true;
					break;
				}
			}
			if (can)
				break;
		}
		if(!can)
			scan[i] = false;
	}

	int size;
	cin >> size;
	int cnt = 0; 
	for (int i = 0; i < size; i++) {
		cin >> c;
		char lo = tolower(c);
		bool flag = false;
		if (chars[lo].empty()) {
			cout << -1;
			return 0;
		}
		else if (isupper(c) && shifts.size() == 0) {
			cout << -1;
			return 0;
		}
		else if (isupper(c) && shifts.size() > 0 )
		{
			if (!scan[lo - 'a'])
				cnt++;
		}
	}
	cout << cnt;
}